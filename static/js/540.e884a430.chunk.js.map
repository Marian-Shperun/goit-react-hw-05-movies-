{"version":3,"file":"static/js/540.e884a430.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Search/Search.jsx","pages/Movies.jsx","services/Api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const UlMovies = styled.ul`\n  list-style-type: decimal;\n  gap: 10px;\n  font-size: 20px;\n`;\n\nexport const LiMovies = styled.li`\n  display: list-item;\n  margin-top: 5px;\n`;\n\nexport const NavLinkStyle = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  &.active {\n    color: orangered;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Outlet } from 'react-router-dom';\n// import MovieDetails from '../MovieDetails/MovieDetails';\nimport { UlMovies, LiMovies, NavLinkStyle } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location =useLocation()\n  return (\n    <UlMovies>\n      {movies.map(({ id, title }) => {\n        return (\n          <LiMovies key={id}>\n            <NavLinkStyle to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </NavLinkStyle>\n            <Outlet />\n          </LiMovies>\n        );\n      })}\n    </UlMovies>\n  );\n};\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { Formik, Field, Form } from 'formik';\nimport PropTypes from 'prop-types';\n\nconst InputForm = ({ onSearch }) => {\n  return (\n  <>\n\n      <Formik\n        initialValues={{\n          query: '',\n        }}\n        onSubmit={({ query }, { resetForm }) => {\n          onSearch(query);\n          resetForm();\n        }}\n      >\n        <Form>\n          <label>\n            <Field type=\"text\" name=\"query\" />\n            <button type=\"submit\">Search</button>\n          </label>\n        </Form>\n      </Formik>\n  </>\n\n  );\n};\n\nexport default InputForm;\n\nInputForm.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport * as Api from '../services/Api';\nimport Search from 'components/Search/Search';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [serch, setSearch] = useSearchParams();\n  const [query, setQuery] = useState('');\n  const [searchMovies, setSearchMovies] = useState([]);\n\n  const queryInput = serch.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      setSearchMovies([]);\n      return;\n    }\n    fetchQueryOnSearch(query);\n  }, [query]);\n\n  useEffect(() => {\n    if (queryInput) {\n      setQuery(queryInput);\n      return;\n    }\n  }, [queryInput]);\n\n  const handleSubmit = searchQuery => {\n    setSearch({ query: searchQuery });\n    setQuery(searchQuery);\n  };\n\n  async function fetchQueryOnSearch(query) {\n    try {\n      const res = await Api.getBySearch(query);\n      setSearchMovies(res);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  return (\n    <main>\n      <Search onSearch={handleSubmit} />\n      {searchMovies.length === 0 && query ? (\n        'not findes'\n      ) : (\n        <>\n\n          <MoviesList movies={searchMovies} />\n        </>\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '520faa847257d57af54017c37ef43fe0';\n\nexport const IMG_PATH = 'https://image.tmdb.org/t/p/w500/';\nexport const noPicture = `${IMG_PATH}uc4RAVW1T3T29h6OQdr7zu4Blui.jpg`;\n\nexport async function getTrending() {\n  try {\n    const resTrending = await axios.get(`/trending/movie/day`, {\n      baseURL: `${BASE_URL}`,\n      params: { api_key: API_KEY },\n    });\n    return await resTrending.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getBySearch(query) {\n  try {\n    const resSearch = await axios.get(`/search/movie`, {\n      baseURL: `${BASE_URL}`,\n      params: {\n        api_key: API_KEY,\n        pages: 1,\n        include_adult: false,\n        query: query,\n      },\n    });\n    return await resSearch.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieById(movie_id) {\n  try {\n    const resId = await axios.get(`/${movie_id}`, {\n      baseURL: `${BASE_URL}/movie`,\n      params: { api_key: API_KEY },\n    });\n    return resId.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getCasts(movie_id) {\n  try {\n    const resCasts = await axios.get(`/credits`, {\n      baseURL: `${BASE_URL}/movie/${movie_id}`,\n      params: { api_key: API_KEY },\n    });\n    return resCasts.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getReviews(movie_id) {\n  try {\n    const Reviews = await axios.get(`/reviews`, {\n      baseURL: `${BASE_URL}/movie/${movie_id}`,\n      params: { api_key: API_KEY },\n    });\n    return Reviews.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["UlMovies","styled","LiMovies","NavLinkStyle","NavLink","movies","location","useLocation","map","id","title","to","state","from","onSearch","initialValues","query","onSubmit","resetForm","type","name","useSearchParams","serch","setSearch","useState","setQuery","searchMovies","setSearchMovies","queryInput","get","useEffect","fetchQueryOnSearch","Api","res","console","log","Search","searchQuery","length","MoviesList","BASE_URL","API_KEY","IMG_PATH","noPicture","getTrending","axios","baseURL","params","api_key","resTrending","data","results","getBySearch","pages","include_adult","resSearch","getMovieById","movie_id","resId","getCasts","resCasts","cast","getReviews","Reviews"],"sourceRoot":""}