{"version":3,"file":"static/js/961.c7d4e44a.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.jsx","services/Api.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { NavLink, Outlet, useParams, useLocation } from 'react-router-dom';\nimport * as Api from '../../services/Api';\n// import PropTypes from 'prop-types';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n\n  const { state } = useLocation();\n  const backHref = state?.from ?? '/';\n\n  const { original_title, poster_path, vote_average, overview, genres } = movie;\n\n  useEffect(() => {\n    async function getMovie(movieId) {\n      try {\n        const data = await Api.getMovieById(movieId);\n        setMovie(data);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    getMovie(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      <NavLink\n        to={backHref}\n        style={{ display: 'inline-block', marginBottom: '10px' }}\n      >\n        &larr; Go to back\n      </NavLink>\n      <div style={{ borderBottom: '1px solid black', paddingBottom: '15px' }}>\n        {poster_path !== null ? (\n          <img\n            src={`${Api.IMG_PATH}${poster_path}`}\n            alt={original_title}\n            width=\"200\"\n          />\n        ) : (\n          <img src={`${Api.noPicture}`} alt={original_title} width=\"200\" />\n        )}\n\n        <div>\n          <h2>{original_title}</h2>\n          <p>{vote_average}</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          {genres === undefined\n            ? 'No genres'\n            : `${genres.map(genre => genre.name).join(', ')}.`}\n        </div>\n      </div>\n      <div style={{ borderBottom: '1px solid black', padding: '15px 0' }}>\n        <b>Addition information</b>\n        <ul>\n          <li>\n            <NavLink to=\"cast\">Cast</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\">Reviews</NavLink>\n          </li>\n          <Outlet />\n        </ul>\n      </div>\n    </>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '520faa847257d57af54017c37ef43fe0';\n\nexport const IMG_PATH = 'https://image.tmdb.org/t/p/w500/';\nexport const noPicture = `${IMG_PATH}uc4RAVW1T3T29h6OQdr7zu4Blui.jpg`;\n\nexport async function getTrending() {\n  try {\n    const resTrending = await axios.get(`/trending/movie/day`, {\n      baseURL: `${BASE_URL}`,\n      params: { api_key: API_KEY },\n    });\n    return await resTrending.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getBySearch(query) {\n  try {\n    const resSearch = await axios.get(`/search/movie`, {\n      baseURL: `${BASE_URL}`,\n      params: {\n        api_key: API_KEY,\n        pages: 1,\n        include_adult: false,\n        query: query,\n      },\n    });\n    return await resSearch.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieById(movie_id) {\n  try {\n    const resId = await axios.get(`/${movie_id}`, {\n      baseURL: `${BASE_URL}/movie`,\n      params: { api_key: API_KEY },\n    });\n    return resId.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getCasts(movie_id) {\n  try {\n    const resCasts = await axios.get(`/credits`, {\n      baseURL: `${BASE_URL}/movie/${movie_id}`,\n      params: { api_key: API_KEY },\n    });\n    return resCasts.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getReviews(movie_id) {\n  try {\n    const Reviews = await axios.get(`/reviews`, {\n      baseURL: `${BASE_URL}/movie/${movie_id}`,\n      params: { api_key: API_KEY },\n    });\n    return Reviews.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["movieId","useParams","useState","movie","setMovie","state","useLocation","backHref","from","original_title","poster_path","vote_average","overview","genres","useEffect","Api","data","console","log","getMovie","to","style","display","marginBottom","borderBottom","paddingBottom","src","alt","width","undefined","map","genre","name","join","padding","BASE_URL","API_KEY","IMG_PATH","noPicture","getTrending","axios","baseURL","params","api_key","resTrending","results","getBySearch","query","pages","include_adult","resSearch","getMovieById","movie_id","resId","getCasts","resCasts","cast","getReviews","Reviews"],"sourceRoot":""}