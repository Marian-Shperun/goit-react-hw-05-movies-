{"version":3,"file":"static/js/247.4eb6087a.chunk.js","mappings":"4PAIaA,EAAO,WAClB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAaA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAAwBL,GAAxB,gGAEuBM,EAAAA,GAAaN,GAFpC,OAEUO,EAFV,OAGIH,EAAQG,GAHZ,gDAKIC,QAAQC,IAAR,MALJ,yDADc,yBAAC,SAAD,2BASdC,CAASV,EACV,GAAE,CAACA,KAGF,wBACGG,EAAKQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACR,0BACoB,OAAjBD,GACC,gBACEE,IAAG,UAAKV,EAAAA,IACRW,IAAKJ,EACLK,MAAM,MACNC,MAAO,CAAEC,YAAa,WAGxB,gBACEJ,IAAG,UAAKV,EAAAA,IAAL,OAAoBQ,GACvBG,IAAKJ,EACLK,MAAM,MACNC,MAAO,CAAEC,YAAa,UAIzBP,GACD,uCAAeE,OAlBRH,EADD,KAwBf,C,8OC5CKS,EAAW,+BACXC,EAAU,mCAEHC,EAAW,mCACXC,EAAS,UAAMD,EAAN,mCAEf,SAAeE,IAAtB,4CAAO,OAAP,oBAAO,6GAEuBC,EAAAA,GAAAA,IAAA,sBAAiC,CACzDC,QAAQ,GAAD,OAAKN,GACZO,OAAQ,CAAEC,QAASP,KAJlB,cAEGQ,EAFH,gBAMUA,EAAYvB,KAAKwB,QAN3B,wEAQHvB,QAAQC,IAAR,MARG,gFAYA,SAAeuB,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,gGAEqBP,EAAAA,GAAAA,IAAA,gBAA2B,CACjDC,QAAQ,GAAD,OAAKN,GACZO,OAAQ,CACNC,QAASP,EACTY,MAAO,EACPC,eAAe,EACfF,MAAOA,KARR,cAEGG,EAFH,gBAWUA,EAAU7B,KAAKwB,QAXzB,wEAaHvB,QAAQC,IAAR,MAbG,gFAiBA,SAAe4B,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gGAEiBZ,EAAAA,GAAAA,IAAA,WAAcY,GAAY,CAC5CX,QAAQ,GAAD,OAAKN,EAAL,UACPO,OAAQ,CAAEC,QAASP,KAJlB,cAEGiB,EAFH,yBAMIA,EAAMhC,MANV,gCAQHC,QAAQC,IAAR,MARG,gFAYA,SAAe+B,EAAtB,+CAAO,OAAP,oBAAO,WAAwBF,GAAxB,gGAEoBZ,EAAAA,GAAAA,IAAA,WAAsB,CAC3CC,QAAQ,GAAD,OAAKN,EAAL,kBAAuBiB,GAC9BV,OAAQ,CAAEC,QAASP,KAJlB,cAEGmB,EAFH,yBAMIA,EAASlC,KAAKJ,MANlB,gCAQHK,QAAQC,IAAR,MARG,gFAYA,SAAeiC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BJ,GAA1B,gGAEmBZ,EAAAA,GAAAA,IAAA,WAAsB,CAC1CC,QAAQ,GAAD,OAAKN,EAAL,kBAAuBiB,GAC9BV,OAAQ,CAAEC,QAASP,KAJlB,cAEGqB,EAFH,yBAMIA,EAAQpC,KAAKwB,SANjB,gCAQHvB,QAAQC,IAAR,MARG,gF","sources":["components/Cast/Cast.jsx","services/Api.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport * as Api from '../../services/Api';\nexport const Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    async function getMovie(movieId) {\n      try {\n        const data = await Api.getCasts(movieId);\n        setCast(data);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    getMovie(movieId);\n  }, [movieId]);\n\n  return (\n    <ol>\n      {cast.map(({ id, name, profile_path, character }) => (\n        <li key={id}>\n          {profile_path === null ? (\n            <img\n              src={`${Api.noPicture}`}\n              alt={name}\n              width=\"100\"\n              style={{ marginRight: '10px' }}\n            />\n          ) : (\n            <img\n              src={`${Api.IMG_PATH}${profile_path}`}\n              alt={name}\n              width=\"100\"\n              style={{ marginRight: '10px' }}\n            />\n          )}\n\n          {name}\n          <p>Character: {character}</p>\n        </li>\n      ))}\n    </ol>\n  );\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '520faa847257d57af54017c37ef43fe0';\n\nexport const IMG_PATH = 'https://image.tmdb.org/t/p/w500/';\nexport const noPicture = `${IMG_PATH}uc4RAVW1T3T29h6OQdr7zu4Blui.jpg`;\n\nexport async function getTrending() {\n  try {\n    const resTrending = await axios.get(`/trending/movie/day`, {\n      baseURL: `${BASE_URL}`,\n      params: { api_key: API_KEY },\n    });\n    return await resTrending.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getBySearch(query) {\n  try {\n    const resSearch = await axios.get(`/search/movie`, {\n      baseURL: `${BASE_URL}`,\n      params: {\n        api_key: API_KEY,\n        pages: 1,\n        include_adult: false,\n        query: query,\n      },\n    });\n    return await resSearch.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieById(movie_id) {\n  try {\n    const resId = await axios.get(`/${movie_id}`, {\n      baseURL: `${BASE_URL}/movie`,\n      params: { api_key: API_KEY },\n    });\n    return resId.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getCasts(movie_id) {\n  try {\n    const resCasts = await axios.get(`/credits`, {\n      baseURL: `${BASE_URL}/movie/${movie_id}`,\n      params: { api_key: API_KEY },\n    });\n    return resCasts.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getReviews(movie_id) {\n  try {\n    const Reviews = await axios.get(`/reviews`, {\n      baseURL: `${BASE_URL}/movie/${movie_id}`,\n      params: { api_key: API_KEY },\n    });\n    return Reviews.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["Cast","movieId","useParams","useState","cast","setCast","useEffect","Api","data","console","log","getMovie","map","id","name","profile_path","character","src","alt","width","style","marginRight","BASE_URL","API_KEY","IMG_PATH","noPicture","getTrending","axios","baseURL","params","api_key","resTrending","results","getBySearch","query","pages","include_adult","resSearch","getMovieById","movie_id","resId","getCasts","resCasts","getReviews","Reviews"],"sourceRoot":""}