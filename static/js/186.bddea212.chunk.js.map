{"version":3,"file":"static/js/186.bddea212.chunk.js","mappings":"+PAIaA,EAAU,WACrB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAAwBL,GAAxB,gGAEuBM,EAAAA,GAAeN,GAFtC,OAEUO,EAFV,OAGIH,EAAWG,GAHf,gDAKIC,QAAQC,IAAR,MALJ,yDADc,yBAAC,SAAD,2BASdC,CAASV,EACV,GAAE,CAACA,KAEF,8BACsB,IAAnBG,EAAQQ,QACP,wBACGR,EAAQS,KAAI,SAAAC,GAAM,OACjB,2BACE,sCAAcA,EAAOC,OAArB,QACA,uBAAID,EAAOE,YAFJF,EAAOC,OADC,OAQrB,sEAIP,C,8OCjCKE,EAAW,+BACXC,EAAU,mCAEHC,EAAW,mCACXC,EAAS,UAAMD,EAAN,mCAEf,SAAeE,IAAtB,4CAAO,OAAP,oBAAO,6GAEuBC,EAAAA,GAAAA,IAAA,sBAAiC,CACzDC,QAAQ,GAAD,OAAKN,GACZO,OAAQ,CAAEC,QAASP,KAJlB,cAEGQ,EAFH,gBAMUA,EAAYlB,KAAKmB,QAN3B,wEAQHlB,QAAQC,IAAR,MARG,gFAYA,SAAekB,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,gGAEqBP,EAAAA,GAAAA,IAAA,gBAA2B,CACjDC,QAAQ,GAAD,OAAKN,GACZO,OAAQ,CACNC,QAASP,EACTY,MAAO,EACPC,eAAe,EACfF,MAAOA,KARR,cAEGG,EAFH,gBAWUA,EAAUxB,KAAKmB,QAXzB,wEAaHlB,QAAQC,IAAR,MAbG,gFAiBA,SAAeuB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gGAEiBZ,EAAAA,GAAAA,IAAA,WAAcY,GAAY,CAC5CX,QAAQ,GAAD,OAAKN,EAAL,UACPO,OAAQ,CAAEC,QAASP,KAJlB,cAEGiB,EAFH,yBAMIA,EAAM3B,MANV,gCAQHC,QAAQC,IAAR,MARG,gFAYA,SAAe0B,EAAtB,+CAAO,OAAP,oBAAO,WAAwBF,GAAxB,gGAEoBZ,EAAAA,GAAAA,IAAA,WAAsB,CAC3CC,QAAQ,GAAD,OAAKN,EAAL,kBAAuBiB,GAC9BV,OAAQ,CAAEC,QAASP,KAJlB,cAEGmB,EAFH,yBAMIA,EAAS7B,KAAK8B,MANlB,gCAQH7B,QAAQC,IAAR,MARG,gFAYA,SAAe6B,EAAtB,+CAAO,OAAP,oBAAO,WAA0BL,GAA1B,gGAEmBZ,EAAAA,GAAAA,IAAA,WAAsB,CAC1CC,QAAQ,GAAD,OAAKN,EAAL,kBAAuBiB,GAC9BV,OAAQ,CAAEC,QAASP,KAJlB,cAEGlB,EAFH,yBAMIA,EAAQQ,KAAKmB,SANjB,gCAQHlB,QAAQC,IAAR,MARG,gF","sources":["components/Reviews/Reviews.jsx","services/Api.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as Api from '../../services/Api';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    async function getMovie(movieId) {\n      try {\n        const data = await Api.getReviews(movieId);\n        setReviews(data);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    getMovie(movieId);\n  }, [movieId]);\n  return (\n    <>\n      {reviews.length !== 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.author}>\n              <h2>Aouthor: {review.author}.</h2>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </>\n  );\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '520faa847257d57af54017c37ef43fe0';\n\nexport const IMG_PATH = 'https://image.tmdb.org/t/p/w500/';\nexport const noPicture = `${IMG_PATH}uc4RAVW1T3T29h6OQdr7zu4Blui.jpg`;\n\nexport async function getTrending() {\n  try {\n    const resTrending = await axios.get(`/trending/movie/day`, {\n      baseURL: `${BASE_URL}`,\n      params: { api_key: API_KEY },\n    });\n    return await resTrending.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getBySearch(query) {\n  try {\n    const resSearch = await axios.get(`/search/movie`, {\n      baseURL: `${BASE_URL}`,\n      params: {\n        api_key: API_KEY,\n        pages: 1,\n        include_adult: false,\n        query: query,\n      },\n    });\n    return await resSearch.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieById(movie_id) {\n  try {\n    const resId = await axios.get(`/${movie_id}`, {\n      baseURL: `${BASE_URL}/movie`,\n      params: { api_key: API_KEY },\n    });\n    return resId.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getCasts(movie_id) {\n  try {\n    const resCasts = await axios.get(`/credits`, {\n      baseURL: `${BASE_URL}/movie/${movie_id}`,\n      params: { api_key: API_KEY },\n    });\n    return resCasts.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getReviews(movie_id) {\n  try {\n    const Reviews = await axios.get(`/reviews`, {\n      baseURL: `${BASE_URL}/movie/${movie_id}`,\n      params: { api_key: API_KEY },\n    });\n    return Reviews.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","Api","data","console","log","getMovie","length","map","review","author","content","BASE_URL","API_KEY","IMG_PATH","noPicture","getTrending","axios","baseURL","params","api_key","resTrending","results","getBySearch","query","pages","include_adult","resSearch","getMovieById","movie_id","resId","getCasts","resCasts","cast","getReviews"],"sourceRoot":""}